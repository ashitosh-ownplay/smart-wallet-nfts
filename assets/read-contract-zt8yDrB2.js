import{o as u,O as y,bg as w,j as A,bh as g,bi as d,p as O}from"./index-C820askT.js";function P(a){return Object.fromEntries(Object.entries(a).map(([t,e])=>[t,{balance:e.balance?u(e.balance):void 0,nonce:e.nonce?u(e.nonce):void 0,code:e.code,state:e.state,stateDiff:e.stateDiff}]))}async function k(a,t){const{blockNumber:e,blockTag:r,...s}=t,c=(e?u(e):void 0)||r||"latest";return await a({method:"eth_call",params:t.stateOverrides?[s,c,P(t.stateOverrides)]:[s,c]})}async function j(a){const{contract:t,method:e,params:r}=a,s=async()=>{var l,b;if(Array.isArray(e))return e;if(g(e))return d(e);if(typeof e=="function")return d(await e(t));if(typeof e=="string"&&e.startsWith("function ")){const o=O(e);if(o.type==="function")return d(o);throw new Error('"method" passed is not of type "function"')}if(t.abi&&((l=t.abi)==null?void 0:l.length)>0){const o=(b=t.abi)==null?void 0:b.find(h=>h.type==="function"&&h.name===e);if(o)return d(o)}throw new Error(`Could not resolve method "${e}".`)},[n,c]=await Promise.all([s(),typeof r=="function"?r():r]);let f;n[1].length===0?f=n[0]:f=n[0]+y(n[1],c).slice(2);const m=w({chain:t.chain,client:t.client}),p=await k(m,{data:f,to:t.address}),i=A(n[2],p);return Array.isArray(i)&&i.length===1?i[0]:i}export{j as readContract};
